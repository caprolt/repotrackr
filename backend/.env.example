# RepoTrackr Environment Configuration
# Copy this file to .env and modify as needed

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Option 1: Local PostgreSQL (requires Docker)
# DATABASE_URL=postgresql+asyncpg://repotrackr:repotrackr_dev@localhost:5432/repotrackr
# DATABASE_URL_SYNC=postgresql://repotrackr:repotrackr_dev@localhost:5432/repotrackr

# Option 2: Supabase PostgreSQL (recommended)
# Replace [project-ref] with your Supabase project reference
# Replace [password] with your Supabase database password
DATABASE_URL=postgresql+asyncpg://postgres:[password]@db.[project-ref].supabase.co:5432/postgres
DATABASE_URL_SYNC=postgresql://postgres:[password]@db.[project-ref].supabase.co:5432/postgres

# Supabase Configuration (optional, for future auth features)
SUPABASE_URL=https://[project-ref].supabase.co
SUPABASE_KEY=[your-service-role-key]
SUPABASE_ANON_KEY=[your-anon-key]

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Local Redis (for job queue and caching)
# REDIS_URL=redis://localhost:6379/0

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Application settings
APP_NAME=RepoTrackr
DEBUG=true
ENVIRONMENT=development

# API settings
API_V1_STR=/api/v1
PROJECT_NAME=RepoTrackr
VERSION=0.1.0

# CORS settings
BACKEND_CORS_ORIGINS=["http://localhost:3000", "http://127.0.0.1:3000"]

# =============================================================================
# GITHUB INTEGRATION (for future use)
# =============================================================================

# GitHub API token for repository access
GITHUB_TOKEN=

# GitHub webhook secret for repository events
GITHUB_WEBHOOK_SECRET=

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================

# 1. For Local Database:
#    - Uncomment the local DATABASE_URL lines above
#    - Comment out the Supabase DATABASE_URL lines
#    - Run: docker-compose up -d postgres redis

# 2. For Supabase Database:
#    - Get your connection details from Supabase dashboard
#    - Replace [project-ref] and [password] in DATABASE_URL
#    - Optionally add SUPABASE_URL and keys for auth features
#    - No Docker containers needed!

# 3. Run migrations:
#    - cd backend
#    - python -m alembic upgrade head
